// Place your key bindings in this file to override the defaults
[
  // Override vim's default Ctrl+t which doesn't quite work in vscode
  // with vscode's native Alt+Left for Go Back
  {
    "key": "ctrl+t",
    "command": "workbench.action.navigateBack",
    "when": "editorTextFocus && vim.active"
  },
  // Remap Ctrl+D and Ctrl+U to default Vim motions
  {
    "key": "ctrl+d",
    "command": "extension.vim_ctrl+d",
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+u",
    "command": "extension.vim_ctrl+u",
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  // Map Ctrl+Shift+D to select the next occurrence
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorTextFocus"
  },
  // Map Ctrl+Shift+U to undo the last selection
  {
    "key": "ctrl+shift+u",
    "command": "cursorUndo",
    "when": "editorTextFocus"
  },
  // ?
  {
    "key": "ctrl+c",
    "command": "-extension.vim_ctrl+c",
    "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
  },
  {
    "key": "ctrl+f",
    "command": "-extension.vim_ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
  // allow moving lines in visual select modes
  {
    "key": "shift+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && vim.mode == 'Visual'"
  },
  {
    "key": "shift+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && vim.mode == 'Visual'"
  },
  {
    "key": "shift+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && vim.mode == 'VisualLine'"
  },
  {
    "key": "shift+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && vim.mode == 'VisualLine'"
  },
  // run show hover action in normal mode when over a text with shift+k
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  // allow regular paste in insert mode (selected text will be replaced instead of displaced)
  {
    "key": "ctrl+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "editorTextFocus && !inDebugRepl && vim.mode == 'Insert'"
  },

  // OPEN TERMINAL AND TOGGLE FOCUS TERMINAL
  // toggle open and close terminal panel
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  // unbind vscode default ctrl+shift+k
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines"
  },
  // add toggle between active editor and terminal while terminal is open
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.terminal.focus",
    "when": "editorTextFocus && !terminalFocus && !terminalTextSelected"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  // TERMINAL NAVIGATION
  {
    "key": "ctrl+shift+a",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },

  // =============== FILE TREE ===============
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+e"
  },
  {
    "command": "workbench.files.action.focusFilesExplorer",
    "key": "ctrl+e",
    "when": "editorTextFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // Removed shortcuts
  {
    "key": "ctrl+a",
    "command": "-extension.vim_ctrl+a",
    "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+x",
    "command": "-extension.vim_ctrl+x",
    "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
  },
  {
    "key": "ctrl+d",
    "command": "-extension.vim_ctrl+d",
    "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+shift+r ctrl+e",
    "command": "-editor.action.codeAction",
    "when": "editorTextFocus && editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
  },
  // Select Completions
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+y",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  }
]
